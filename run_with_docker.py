#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ UFC Ranker —Å Docker (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
"""

import subprocess
import sys
import os
from pathlib import Path


def check_docker():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker"""
    try:
        result = subprocess.run(['docker', '--version'], 
                              capture_output=True, text=True, check=True)
        print(f"‚úÖ Docker –Ω–∞–π–¥–µ–Ω: {result.stdout.strip()}")
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤.")
        return False


def check_docker_compose():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker Compose"""
    try:
        result = subprocess.run(['docker-compose', '--version'], 
                              capture_output=True, text=True, check=True)
        print(f"‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω: {result.stdout.strip()}")
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose.")
        return False


def run_docker_services():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Docker —Å–µ—Ä–≤–∏—Å—ã"""
    print("üê≥ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∏ Redis
        subprocess.run([
            'docker-compose', '-f', 'docker-compose.local.yml', 'up', '-d', 'postgres', 'redis'
        ], check=True)
        
        print("‚úÖ PostgreSQL –∏ Redis –∑–∞–ø—É—â–µ–Ω—ã")
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        import time
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        time.sleep(10)
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Docker —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return False


def run_enhanced_parsers_with_docker():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã —Å Docker —Å–µ—Ä–≤–∏—Å–∞–º–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤ —Å Docker...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL
    os.environ['DATABASE_URL'] = 'postgresql://ufc_ranker:ufc_ranker_password@localhost:5432/ufc_ranker'
    os.environ['REDIS_URL'] = 'redis://localhost:6379/0'
    os.environ['CELERY_BROKER_URL'] = 'redis://localhost:6379/0'
    os.environ['CELERY_RESULT_BACKEND'] = 'redis://localhost:6379/0'
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã
    try:
        subprocess.run([sys.executable, 'run_enhanced_parsers.py'], check=True)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")
        return False


def stop_docker_services():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Docker —Å–µ—Ä–≤–∏—Å—ã"""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        subprocess.run([
            'docker-compose', '-f', 'docker-compose.local.yml', 'down'
        ], check=True)
        print("‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Docker —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üê≥ UFC Ranker - –ó–∞–ø—É—Å–∫ —Å Docker")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if not check_docker():
        print("\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Docker —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop")
        print("   –°–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ —Å: https://www.docker.com/products/docker-desktop")
        return 1
    
    if not check_docker_compose():
        print("\nüí° Docker Compose –æ–±—ã—á–Ω–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–∞–≤ Docker Desktop")
        return 1
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å—ã
        if not run_docker_services():
            return 1
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã
        if not run_enhanced_parsers_with_docker():
            return 1
        
        print("\nüéâ UFC Ranker —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å Docker!")
        print("\nüìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("  - PostgreSQL: localhost:5432")
        print("  - Redis: localhost:6379")
        print("  - API: localhost:8000 (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω backend)")
        
        input("\n‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å—ã
        stop_docker_services()
    
    return 0


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
