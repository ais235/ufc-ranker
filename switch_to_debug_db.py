#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import os
import shutil
from datetime import datetime

def switch_to_debug_db():
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    print("="*50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–π –ë–î
    current_db = "ufc_ranker_v2.db"
    debug_db = "debug_ufc_ranker.db"
    backup_db = f"ufc_ranker_v2_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –ë–î
        if not os.path.exists(debug_db):
            print(f"‚ùå –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {debug_db} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            print("üí° –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python create_debug_database.py")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–π –ë–î
        if os.path.exists(current_db):
            shutil.copy2(current_db, backup_db)
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_db}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é
        shutil.copy2(debug_db, current_db)
        print(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î: {debug_db} -> {current_db}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print("-" * 30)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        import sqlite3
        conn = sqlite3.connect(current_db)
        cursor = conn.cursor()
        
        # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        tables = [
            ("fighters", "–ë–æ–π—Ü—ã"),
            ("weight_classes", "–í–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
            ("rankings", "–†–µ–π—Ç–∏–Ω–≥–∏"),
            ("fight_records", "–ë–æ–µ–≤—ã–µ —Ä–µ–∫–æ—Ä–¥—ã"),
            ("events", "–°–æ–±—ã—Ç–∏—è"),
            ("fights", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –±–æ–∏"),
            ("fight_stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–µ–≤"),
            ("upcoming_fights", "–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –±–æ–∏")
        ]
        
        for table, name in tables:
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table}")
                count = cursor.fetchone()[0]
                print(f"  {name}: {count}")
            except sqlite3.OperationalError:
                print(f"  {name}: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        conn.close()
        
        print("\n" + "="*50)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
        print("üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–æ–π—Ü–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print("="*50)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –ë–î: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = switch_to_debug_db()
    if not success:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î")
        return False
    
    return True

if __name__ == "__main__":
    main()





