#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
from datetime import date, datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.config import get_db, init_database
from database.models import Fighter, WeightClass, Ranking, FightRecord
from sqlalchemy.orm import Session

def create_test_fighters(db: Session):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –±–æ–π—Ü–æ–≤"""
    
    # –°–æ–∑–¥–∞–µ–º –≤–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    weight_classes = [
        {"name_ru": "–õ–µ–≥–∫–∏–π –≤–µ—Å", "name_en": "Lightweight", "weight_min": 66, "weight_max": 70, "gender": "male"},
        {"name_ru": "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å", "name_en": "Featherweight", "weight_min": 61, "weight_max": 66, "gender": "male"},
        {"name_ru": "–ü–æ–ª—É—Ç—è–∂—ë–ª—ã–π –≤–µ—Å", "name_en": "Light Heavyweight", "weight_min": 84, "weight_max": 93, "gender": "male"},
        {"name_ru": "–¢—è–∂—ë–ª—ã–π –≤–µ—Å", "name_en": "Heavyweight", "weight_min": 93, "weight_max": 120, "gender": "male"},
    ]
    
    for wc_data in weight_classes:
        existing = db.query(WeightClass).filter(WeightClass.name_ru == wc_data["name_ru"]).first()
        if not existing:
            weight_class = WeightClass(**wc_data)
            db.add(weight_class)
    
    db.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    lightweight = db.query(WeightClass).filter(WeightClass.name_ru == "–õ–µ–≥–∫–∏–π –≤–µ—Å").first()
    featherweight = db.query(WeightClass).filter(WeightClass.name_ru == "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å").first()
    light_heavyweight = db.query(WeightClass).filter(WeightClass.name_ru == "–ü–æ–ª—É—Ç—è–∂—ë–ª—ã–π –≤–µ—Å").first()
    heavyweight = db.query(WeightClass).filter(WeightClass.name_ru == "–¢—è–∂—ë–ª—ã–π –≤–µ—Å").first()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –±–æ–π—Ü—ã
    test_fighters = [
        {
            "name_ru": "–ò—Å–ª–∞–º –ú–∞—Ö–∞—á–µ–≤",
            "name_en": "Islam Makhachev",
            "nickname": "The Eagle",
            "country": "–†–æ—Å—Å–∏—è",
            "height": 178,
            "weight": 70,
            "reach": 180,
            "age": 32,
            "birth_date": date(1991, 10, 27),
            "weight_class": "–õ–µ–≥–∫–∏–π –≤–µ—Å",
            "win": 25,
            "draw": 0,
            "lose": 1,
            "career": "UFC",
            "image_url": "https://via.placeholder.com/300x400/1E3A8A/FFFFFF?text=–ò—Å–ª–∞–º+–ú–∞—Ö–∞—á–µ–≤"
        },
        {
            "name_ru": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–∫–∞–Ω–æ–≤—Å–∫–∏",
            "name_en": "Alexander Volkanovski",
            "nickname": "The Great",
            "country": "–ê–≤—Å—Ç—Ä–∞–ª–∏—è",
            "height": 168,
            "weight": 66,
            "reach": 183,
            "age": 35,
            "birth_date": date(1988, 9, 29),
            "weight_class": "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å",
            "win": 26,
            "draw": 0,
            "lose": 3,
            "career": "UFC",
            "image_url": "https://via.placeholder.com/300x400/FFD700/000000?text=–ê–ª–µ–∫—Å–∞–Ω–¥—Ä+–í–æ–ª–∫–∞–Ω–æ–≤—Å–∫–∏"
        },
        {
            "name_ru": "–î–∂–æ–Ω –î–∂–æ–Ω—Å",
            "name_en": "Jon Jones",
            "nickname": "Bones",
            "country": "–°–®–ê",
            "height": 193,
            "weight": 93,
            "reach": 215,
            "age": 36,
            "birth_date": date(1987, 7, 19),
            "weight_class": "–ü–æ–ª—É—Ç—è–∂—ë–ª—ã–π –≤–µ—Å",
            "win": 27,
            "draw": 0,
            "lose": 1,
            "career": "UFC",
            "image_url": "https://via.placeholder.com/300x400/C8102E/FFFFFF?text=–î–∂–æ–Ω+–î–∂–æ–Ω—Å"
        },
        {
            "name_ru": "–ú–∞–∫—Å –•–æ–ª–ª–æ–≤—ç–π",
            "name_en": "Max Holloway",
            "nickname": "Blessed",
            "country": "–°–®–ê",
            "height": 180,
            "weight": 66,
            "reach": 175,
            "age": 32,
            "birth_date": date(1991, 12, 4),
            "weight_class": "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å",
            "win": 25,
            "draw": 0,
            "lose": 7,
            "career": "UFC",
            "image_url": "https://via.placeholder.com/300x400/1E3A8A/FFFFFF?text=–ú–∞–∫—Å+–•–æ–ª–ª–æ–≤—ç–π"
        },
        {
            "name_ru": "–§—Ä—ç–Ω—Å–∏—Å –ù–≥–∞–Ω–Ω—É",
            "name_en": "Francis Ngannou",
            "nickname": "The Predator",
            "country": "–ö–∞–º–µ—Ä—É–Ω",
            "height": 193,
            "weight": 120,
            "reach": 211,
            "age": 37,
            "birth_date": date(1986, 9, 5),
            "weight_class": "–¢—è–∂—ë–ª—ã–π –≤–µ—Å",
            "win": 17,
            "draw": 0,
            "lose": 3,
            "career": "UFC",
            "image_url": "https://via.placeholder.com/300x400/000000/FFFFFF?text=–§—Ä—ç–Ω—Å–∏—Å+–ù–≥–∞–Ω–Ω—É"
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–π—Ü–æ–≤
    created_fighters = []
    for fighter_data in test_fighters:
        existing = db.query(Fighter).filter(Fighter.name_ru == fighter_data["name_ru"]).first()
        if not existing:
            fighter = Fighter(**fighter_data)
            db.add(fighter)
            created_fighters.append(fighter)
        else:
            created_fighters.append(existing)
    
    db.commit()
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏
    rankings_data = [
        {"fighter": "–ò—Å–ª–∞–º –ú–∞—Ö–∞—á–µ–≤", "weight_class": "–õ–µ–≥–∫–∏–π –≤–µ—Å", "rank_position": 1, "is_champion": True},
        {"fighter": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–∫–∞–Ω–æ–≤—Å–∫–∏", "weight_class": "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å", "rank_position": 1, "is_champion": True},
        {"fighter": "–î–∂–æ–Ω –î–∂–æ–Ω—Å", "weight_class": "–ü–æ–ª—É—Ç—è–∂—ë–ª—ã–π –≤–µ—Å", "rank_position": 1, "is_champion": True},
        {"fighter": "–ú–∞–∫—Å –•–æ–ª–ª–æ–≤—ç–π", "weight_class": "–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å", "rank_position": 2, "is_champion": False},
        {"fighter": "–§—Ä—ç–Ω—Å–∏—Å –ù–≥–∞–Ω–Ω—É", "weight_class": "–¢—è–∂—ë–ª—ã–π –≤–µ—Å", "rank_position": 1, "is_champion": True},
    ]
    
    for rank_data in rankings_data:
        fighter = db.query(Fighter).filter(Fighter.name_ru == rank_data["fighter"]).first()
        weight_class = db.query(WeightClass).filter(WeightClass.name_ru == rank_data["weight_class"]).first()
        
        if fighter and weight_class:
            existing_ranking = db.query(Ranking).filter(
                Ranking.fighter_id == fighter.id,
                Ranking.weight_class_id == weight_class.id
            ).first()
            
            if not existing_ranking:
                ranking = Ranking(
                    fighter_id=fighter.id,
                    weight_class_id=weight_class.id,
                    rank_position=rank_data["rank_position"],
                    is_champion=rank_data["is_champion"]
                )
                db.add(ranking)
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–µ–≤—ã–µ —Ä–µ–∫–æ—Ä–¥—ã
    for fighter in created_fighters:
        existing_record = db.query(FightRecord).filter(FightRecord.fighter_id == fighter.id).first()
        if not existing_record:
            record = FightRecord(
                fighter_id=fighter.id,
                wins=fighter.win,
                losses=fighter.lose,
                draws=fighter.draw
            )
            db.add(record)
    
    db.commit()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    fighters_count = db.query(Fighter).count()
    weight_classes_count = db.query(WeightClass).count()
    rankings_count = db.query(Ranking).count()
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –ë–æ–π—Ü–æ–≤: {fighters_count}")
    print(f"   –í–µ—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {weight_classes_count}")
    print(f"   –†–µ–π—Ç–∏–Ω–≥–æ–≤: {rankings_count}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü•ä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_database()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = next(get_db())
    
    try:
        create_test_fighters(db)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    main()

