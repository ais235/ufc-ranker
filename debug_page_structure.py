#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã Wikipedia
"""

import requests
from bs4 import BeautifulSoup

def debug_page_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã Wikipedia"""
    
    print("üîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –°–¢–†–ê–ù–ò–¶–´ WIKIPEDIA")
    print("=" * 50)
    
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get("https://en.wikipedia.org/wiki/List_of_UFC_events", headers=headers, timeout=30)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ h2
        print("üîç –í—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ h2:")
        h2_headers = soup.find_all('h2')
        for i, header in enumerate(h2_headers):
            header_id = header.get('id', 'no-id')
            header_text = header.get_text(strip=True)
            print(f"  {i+1}. ID: {header_id} | –¢–µ–∫—Å—Ç: {header_text}")
            
            # –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            next_table = header.find_next('table')
            if next_table:
                rows = next_table.find_all('tr')
                print(f"     üìä –°–ª–µ–¥—É—é—â–∞—è —Ç–∞–±–ª–∏—Ü–∞: {len(rows)} —Å—Ç—Ä–æ–∫")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏
                for j, row in enumerate(rows[:3]):
                    cells = row.find_all(['td', 'th'])
                    cell_texts = [cell.get_text(strip=True) for cell in cells]
                    print(f"       –°—Ç—Ä–æ–∫–∞ {j+1}: {cell_texts}")
            else:
                print(f"     ‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ò—â–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        print(f"\nüîç –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
        tables = soup.find_all('table')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(tables)} —Ç–∞–±–ª–∏—Ü")
        
        for i, table in enumerate(tables):
            rows = table.find_all('tr')
            print(f"\nüìã –¢–∞–±–ª–∏—Ü–∞ {i+1}: {len(rows)} —Å—Ç—Ä–æ–∫")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏
            for j, row in enumerate(rows[:3]):
                cells = row.find_all(['td', 'th'])
                cell_texts = [cell.get_text(strip=True) for cell in cells]
                print(f"  –°—Ç—Ä–æ–∫–∞ {j+1}: {cell_texts}")
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –∏—â–µ–º Past events –∏ Scheduled events
        print(f"\nüîç –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å–µ–∫—Ü–∏–π:")
        
        # Past events
        past_header = soup.find('h2', {'id': 'Past_events'})
        if past_header:
            print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ Past events –Ω–∞–π–¥–µ–Ω")
            print(f"   –¢–µ–∫—Å—Ç: {past_header.get_text(strip=True)}")
            
            # –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É
            next_table = past_header.find_next('table')
            if next_table:
                rows = next_table.find_all('tr')
                print(f"   üìä –°–ª–µ–¥—É—é—â–∞—è —Ç–∞–±–ª–∏—Ü–∞: {len(rows)} —Å—Ç—Ä–æ–∫")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
                for j, row in enumerate(rows[:5]):
                    cells = row.find_all(['td', 'th'])
                    cell_texts = [cell.get_text(strip=True) for cell in cells]
                    print(f"     –°—Ç—Ä–æ–∫–∞ {j+1}: {cell_texts}")
            else:
                print("   ‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ Past events –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # Scheduled events
        scheduled_header = soup.find('h2', {'id': 'Scheduled_events'})
        if scheduled_header:
            print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ Scheduled events –Ω–∞–π–¥–µ–Ω")
            print(f"   –¢–µ–∫—Å—Ç: {scheduled_header.get_text(strip=True)}")
            
            # –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É
            next_table = scheduled_header.find_next('table')
            if next_table:
                rows = next_table.find_all('tr')
                print(f"   üìä –°–ª–µ–¥—É—é—â–∞—è —Ç–∞–±–ª–∏—Ü–∞: {len(rows)} —Å—Ç—Ä–æ–∫")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
                for j, row in enumerate(rows[:5]):
                    cells = row.find_all(['td', 'th'])
                    cell_texts = [cell.get_text(strip=True) for cell in cells]
                    print(f"     –°—Ç—Ä–æ–∫–∞ {j+1}: {cell_texts}")
            else:
                print("   ‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ Scheduled events –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    debug_page_structure()
