#!/usr/bin/env python3
"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –ë–î
"""

import os
import shutil
import sys
from datetime import datetime

def list_databases():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print("-" * 40)
    
    db_files = [
        ("ufc_ranker_v2.db", "–û—Å–Ω–æ–≤–Ω–∞—è –ë–î"),
        ("debug_ufc_ranker.db", "–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –ë–î"),
        ("test_ufc_ranker.db", "–¢–µ—Å—Ç–æ–≤–∞—è –ë–î"),
        ("ufc_stats.db", "UFC Stats –ë–î")
    ]
    
    for db_file, description in db_files:
        if os.path.exists(db_file):
            size = os.path.getsize(db_file)
            size_mb = size / (1024 * 1024)
            print(f"  ‚úÖ {db_file} - {description} ({size_mb:.1f} MB)")
        else:
            print(f"  ‚ùå {db_file} - {description} (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞)")
    
    print()

def switch_database(source_db, target_db="ufc_ranker_v2.db"):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    if not os.path.exists(source_db):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {source_db} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–π –ë–î
        if os.path.exists(target_db):
            backup_name = f"{target_db.replace('.db', '')}_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
            shutil.copy2(target_db, backup_name)
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_name}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ë–î
        shutil.copy2(source_db, target_db)
        print(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ: {source_db} -> {target_db}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        show_db_stats(target_db)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏: {e}")
        return False

def show_db_stats(db_file):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        import sqlite3
        conn = sqlite3.connect(db_file)
        cursor = conn.cursor()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {db_file}:")
        print("-" * 30)
        
        tables = [
            ("fighters", "–ë–æ–π—Ü—ã"),
            ("weight_classes", "–í–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
            ("rankings", "–†–µ–π—Ç–∏–Ω–≥–∏"),
            ("events", "–°–æ–±—ã—Ç–∏—è"),
            ("fights", "–ë–æ–∏"),
            ("fight_stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–µ–≤"),
            ("upcoming_fights", "–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –±–æ–∏")
        ]
        
        for table, name in tables:
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table}")
                count = cursor.fetchone()[0]
                print(f"  {name}: {count}")
            except sqlite3.OperationalError:
                pass  # –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("üóÑÔ∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö UFC Ranker")
        print("=" * 50)
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python db_manager.py list                    - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ë–î")
        print("  python db_manager.py switch <source>         - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ë–î")
        print("  python db_manager.py stats [db_file]         - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python db_manager.py switch debug_ufc_ranker.db")
        print("  python db_manager.py switch test_ufc_ranker.db")
        print("  python db_manager.py stats")
        return
    
    command = sys.argv[1].lower()
    
    if command == "list":
        list_databases()
    
    elif command == "switch":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è")
            print("–ü—Ä–∏–º–µ—Ä: python db_manager.py switch debug_ufc_ranker.db")
            return
        
        source_db = sys.argv[2]
        success = switch_database(source_db)
        if success:
            print("\nüéâ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ë–î")
    
    elif command == "stats":
        db_file = sys.argv[2] if len(sys.argv) > 2 else "ufc_ranker_v2.db"
        if os.path.exists(db_file):
            show_db_stats(db_file)
        else:
            print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_file} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'python db_manager.py' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")

if __name__ == "__main__":
    main()












