#!/usr/bin/env python3
"""
–ü—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö UFC Ranker
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ 37 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ–π—Ü–æ–≤
"""

import sqlite3
import pandas as pd
from tabulate import tabulate

def view_database():
    conn = sqlite3.connect('ufc_ranker_v2.db')
    
    print("ü•ä UFC RANKER - –ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    tables = ['fighters', 'events', 'fights', 'fight_stats', 'weight_classes', 'rankings']
    for table in tables:
        try:
            cursor = conn.cursor()
            cursor.execute(f'SELECT COUNT(*) FROM {table}')
            count = cursor.fetchone()[0]
            print(f"  {table:15}: {count:4d} –∑–∞–ø–∏—Å–µ–π")
        except:
            print(f"  {table:15}: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 2. 37 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìà 37 –ü–ê–†–ê–ú–ï–¢–†–û–í –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ë–û–ô–¶–ê:")
    cursor = conn.cursor()
    cursor.execute('PRAGMA table_info(fight_stats)')
    columns = cursor.fetchall()
    
    for i, col in enumerate(columns, 1):
        print(f"  {i:2d}. {col[1]:<25} ({col[2]})")
    
    # 3. –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìã –ü–†–ò–ú–ï–†–´ –î–ê–ù–ù–´–• –°–¢–ê–¢–ò–°–¢–ò–ö–ò:")
    cursor.execute("""
        SELECT 
            fs.id,
            f.name_ru as fighter_name,
            fs.round_number,
            fs.knockdowns,
            fs.significant_strikes_landed,
            fs.significant_strikes_attempted,
            fs.significant_strikes_rate,
            fs.takedown_successful,
            fs.takedown_attempted,
            fs.takedown_rate,
            fs.result,
            fs.winner
        FROM fight_stats fs
        JOIN fighters f ON fs.fighter_id = f.id
        LIMIT 5
    """)
    
    rows = cursor.fetchall()
    if rows:
        headers = ['ID', '–ë–æ–µ—Ü', '–†–∞—É–Ω–¥', '–ù–æ–∫–∞—É—Ç—ã', '–£–¥–∞—Ä—ã (–ø–æ–ø–∞–ª)', '–£–¥–∞—Ä—ã (–≤—Å–µ–≥–æ)', '–¢–æ—á–Ω–æ—Å—Ç—å %', '–¢–µ–π–∫–¥–∞—É–Ω—ã (—É—Å–ø–µ—Ö)', '–¢–µ–π–∫–¥–∞—É–Ω—ã (–≤—Å–µ–≥–æ)', '–¢–µ–π–∫–¥–∞—É–Ω—ã %', '–†–µ–∑—É–ª—å—Ç–∞—Ç', '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å']
        print(tabulate(rows, headers=headers, tablefmt='grid'))
    
    # 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–æ–π—Ü–∞–º
    print("\nüëä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ë–û–ô–¶–ê–ú:")
    cursor.execute("""
        SELECT 
            f.name_ru,
            f.country,
            COUNT(fs.id) as total_rounds,
            SUM(fs.knockdowns) as total_knockdowns,
            SUM(fs.significant_strikes_landed) as total_strikes,
            AVG(fs.significant_strikes_rate) as avg_accuracy,
            SUM(fs.takedown_successful) as total_takedowns
        FROM fighters f
        LEFT JOIN fight_stats fs ON f.id = fs.fighter_id
        GROUP BY f.id, f.name_ru, f.country
        ORDER BY total_rounds DESC
    """)
    
    fighter_stats = cursor.fetchall()
    if fighter_stats:
        headers = ['–ë–æ–µ—Ü', '–°—Ç—Ä–∞–Ω–∞', '–†–∞—É–Ω–¥–æ–≤', '–ù–æ–∫–∞—É—Ç–æ–≤', '–£–¥–∞—Ä–æ–≤', '–¢–æ—á–Ω–æ—Å—Ç—å %', '–¢–µ–π–∫–¥–∞—É–Ω–æ–≤']
        print(tabulate(fighter_stats, headers=headers, tablefmt='grid'))
    
    # 5. –í–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n‚öñÔ∏è –í–ï–°–û–í–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò:")
    cursor.execute("SELECT id, name_ru, name_en FROM weight_classes")
    weight_classes = cursor.fetchall()
    if weight_classes:
        headers = ['ID', '–†—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ', '–ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ']
        print(tabulate(weight_classes, headers=headers, tablefmt='grid'))
    
    conn.close()
    print("\n‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    view_database()
