#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π —Å—Ä–µ–¥—ã —Å –ø–æ–ª–Ω–æ–π –ë–î
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        "debug_ufc_ranker.db",
        "database/models.py",
        "database/config.py",
        "backend/app.py"
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        return False
    
    return True

def switch_to_debug_db():
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î"""
    print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        import shutil
        from datetime import datetime
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        if os.path.exists("ufc_ranker_v2.db"):
            backup_name = f"ufc_ranker_v2_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
            shutil.copy2("ufc_ranker_v2.db", backup_name)
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_name}")
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î
        shutil.copy2("debug_ufc_ranker.db", "ufc_ranker_v2.db")
        print("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ë–î: {e}")
        return False

def start_backend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±—ç–∫–µ–Ω–¥"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if not os.path.exists("backend/app.py"):
            print("‚ùå –§–∞–π–ª backend/app.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return None
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        process = subprocess.Popen(
            [sys.executable, "start_backend.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        time.sleep(2)
        
        if process.poll() is None:
            print("‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: {})".format(process.pid))
            return process
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞:")
            print(f"STDOUT: {stdout}")
            print(f"STDERR: {stderr}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞: {e}")
        return None

def start_frontend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥"""
    print("üé® –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...")
    
    try:
        frontend_dir = Path("frontend")
        if not frontend_dir.exists():
            print("‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return None
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        os.chdir(frontend_dir)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
        if not os.path.exists("package.json"):
            print("‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ frontend!")
            return None
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
        process = subprocess.Popen(
            ["npm", "run", "dev"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
        time.sleep(3)
        
        if process.poll() is None:
            print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: {})".format(process.pid))
            return process
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:")
            print(f"STDOUT: {stdout}")
            print(f"STDERR: {stderr}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {e}")
        return None

def show_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—â–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ"""
    print("\n" + "="*60)
    print("üéâ –û–¢–õ–ê–î–û–ß–ù–ê–Ø –°–†–ï–î–ê –ó–ê–ü–£–©–ï–ù–ê!")
    print("="*60)
    print("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: debug_ufc_ranker.db")
    print("   - 17 –±–æ–π—Ü–æ–≤")
    print("   - 7 –≤–µ—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    print("   - 5 —Å–æ–±—ã—Ç–∏–π UFC")
    print("   - 4 –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –±–æ—è")
    print("   - 4 –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –±–æ—è")
    print("   - –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–µ–≤")
    print()
    print("üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:")
    print("   - –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:5173")
    print("   - –ë—ç–∫–µ–Ω–¥ API: http://localhost:8000")
    print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print()
    print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("="*60)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π —Å—Ä–µ–¥—ã UFC Ranker")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_requirements():
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é —Å—Ä–µ–¥—É")
        return False
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î
    if not switch_to_debug_db():
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –ë–î")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥
    backend_process = start_backend()
    if not backend_process:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—ç–∫–µ–Ω–¥")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    frontend_process = start_frontend()
    if not frontend_process:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥")
        if backend_process:
            backend_process.terminate()
        return False
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    show_info()
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        while True:
            time.sleep(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
            if backend_process.poll() is not None:
                print("\n‚ùå –ë—ç–∫–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
                break
            
            if frontend_process.poll() is not None:
                print("\n‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
                break
                
    except KeyboardInterrupt:
        print("\n\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π —Å—Ä–µ–¥—ã...")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        if backend_process and backend_process.poll() is None:
            backend_process.terminate()
            print("‚úÖ –ë—ç–∫–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        if frontend_process and frontend_process.poll() is None:
            frontend_process.terminate()
            print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("üéâ –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Å—Ä–µ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    return True

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)





