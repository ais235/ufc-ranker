#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.models import (
    Fighter, WeightClass, Ranking, FightRecord, 
    Event, Fight, FightStats, UpcomingFight
)

def view_debug_data():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –±–∞–∑—ã"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    engine = create_engine('sqlite:///ufc_ranker_v2.db', echo=False)
    Session = sessionmaker(bind=engine)
    session = Session()
    
    try:
        print("üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –±–∞–∑—ã")
        print("="*60)
        
        # 1. –ë–æ–π—Ü—ã
        print("\nü•ä –ë–û–ô–¶–´:")
        print("-" * 30)
        fighters = session.query(Fighter).all()
        for fighter in fighters:
            print(f"  {fighter.id:2d}. {fighter.name_ru} ({fighter.nickname})")
            print(f"      –°—Ç—Ä–∞–Ω–∞: {fighter.country} | –í–µ—Å: {fighter.weight}–∫–≥ | –†–æ—Å—Ç: {fighter.height}—Å–º")
            print(f"      –†–µ–∫–æ—Ä–¥: {fighter.win}-{fighter.lose}-{fighter.draw} | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {fighter.weight_class}")
            print()
        
        # 2. –í–µ—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("\n‚öñÔ∏è –í–ï–°–û–í–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò:")
        print("-" * 30)
        weight_classes = session.query(WeightClass).all()
        for wc in weight_classes:
            print(f"  {wc.name_ru} ({wc.name_en})")
            print(f"      –í–µ—Å: {wc.weight_min}-{wc.weight_max}–∫–≥ | –ü–æ–ª: {wc.gender}")
            print()
        
        # 3. –†–µ–π—Ç–∏–Ω–≥–∏
        print("\nüèÜ –†–ï–ô–¢–ò–ù–ì–ò:")
        print("-" * 30)
        rankings = session.query(Ranking).join(Fighter).join(WeightClass).all()
        for ranking in rankings:
            champion = "üëë" if ranking.is_champion else "  "
            print(f"  {champion} #{ranking.rank_position:2d}. {ranking.fighter.name_ru}")
            print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {ranking.weight_class.name_ru}")
            print()
        
        # 4. –°–æ–±—ã—Ç–∏—è
        print("\nüé™ –°–û–ë–´–¢–ò–Ø:")
        print("-" * 30)
        events = session.query(Event).all()
        for event in events:
            status = "üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–µ–µ" if event.is_upcoming else "‚úÖ –ü—Ä–æ—à–µ–¥—à–µ–µ"
            print(f"  {event.name}")
            print(f"      –î–∞—Ç–∞: {event.date} | –ú–µ—Å—Ç–æ: {event.location}")
            print(f"      –°—Ç–∞—Ç—É—Å: {status}")
            print()
        
        # 5. –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –±–æ–∏
        print("\nü•ä –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ï –ë–û–ò:")
        print("-" * 30)
        fights = session.query(Fight).join(Event).all()
        for fight in fights:
            title = "üèÜ –¢–ò–¢–£–õ–¨–ù–´–ô" if fight.is_title_fight else "  –û–±—ã—á–Ω—ã–π"
            main = "‚≠ê –ì–õ–ê–í–ù–´–ô" if fight.is_main_event else "  –û–±—ã—á–Ω—ã–π"
            print(f"  {fight.fighter1.name_ru} vs {fight.fighter2.name_ru}")
            print(f"      –°–æ–±—ã—Ç–∏–µ: {fight.event.name}")
            print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {fight.result} | –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {fight.winner.name_ru if fight.winner else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}")
            print(f"      –¢–∏–ø: {title} | {main}")
            print()
        
        # 6. –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –±–æ–∏
        print("\nüìÖ –ü–†–ï–î–°–¢–û–Ø–©–ò–ï –ë–û–ò:")
        print("-" * 30)
        upcoming = session.query(UpcomingFight).all()
        for fight in upcoming:
            title = "üèÜ –¢–ò–¢–£–õ–¨–ù–´–ô" if fight.is_title_fight else "  –û–±—ã—á–Ω—ã–π"
            main = "‚≠ê –ì–õ–ê–í–ù–´–ô" if fight.is_main_event else "  –û–±—ã—á–Ω—ã–π"
            print(f"  {fight.fighter1.name_ru} vs {fight.fighter2.name_ru}")
            print(f"      –°–æ–±—ã—Ç–∏–µ: {fight.event_name}")
            print(f"      –î–∞—Ç–∞: {fight.event_date} | –ú–µ—Å—Ç–æ: {fight.location}")
            print(f"      –¢–∏–ø: {title} | {main}")
            print()
        
        # 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–µ–≤ (–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –±–æ—è)
        print("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–ï–í (–ø—Ä–∏–º–µ—Ä - –ú–∞—Ö–∞—á–µ–≤ vs –û–ª–∏–≤–µ–π—Ä–∞):")
        print("-" * 30)
        fight_stats = session.query(FightStats).join(Fight).filter(Fight.id == 1).all()
        for stat in fight_stats:
            print(f"  –†–∞—É–Ω–¥ {stat.round_number}: {stat.fighter.name_ru}")
            print(f"      –ó–Ω–∞—á–∏–º—ã–µ —É–¥–∞—Ä—ã: {stat.significant_strikes_landed}/{stat.significant_strikes_attempted} ({stat.significant_strikes_rate}%)")
            print(f"      –¢–µ–π–∫–¥–∞—É–Ω—ã: {stat.takedown_successful}/{stat.takedown_attempted} ({stat.takedown_rate}%)")
            print(f"      –£–¥–∞—Ä—ã –≤ –≥–æ–ª–æ–≤—É: {stat.head_landed}/{stat.head_attempted}")
            print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞: {stat.winner}")
            print()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("-" * 30)
        print(f"  –ë–æ–π—Ü–æ–≤: {session.query(Fighter).count()}")
        print(f"  –í–µ—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {session.query(WeightClass).count()}")
        print(f"  –†–µ–π—Ç–∏–Ω–≥–æ–≤: {session.query(Ranking).count()}")
        print(f"  –°–æ–±—ã—Ç–∏–π: {session.query(Event).count()}")
        print(f"  –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –±–æ–µ–≤: {session.query(Fight).count()}")
        print(f"  –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –±–æ–µ–≤: {session.query(UpcomingFight).count()}")
        print(f"  –ó–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {session.query(FightStats).count()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        session.close()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    view_debug_data()

if __name__ == "__main__":
    main()





