#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...")
    
    try:
        from database.config import init_database, SessionLocal
        from database.models import Fighter, WeightClass
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        init_database()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        db = SessionLocal()
        fighters_count = db.query(Fighter).count()
        weight_classes_count = db.query(WeightClass).count()
        db.close()
        
        print(f"‚úÖ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print(f"   –ë–æ–π—Ü–æ–≤ –≤ –ë–î: {fighters_count}")
        print(f"   –í–µ—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {weight_classes_count}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def test_rankings_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä —Ä–µ–π—Ç–∏–Ω–≥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤...")
    
    try:
        from parsers.ufc_rankings import UFCRankingsParser
        
        parser = UFCRankingsParser()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∫—ç—à–µ–º (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
        if os.path.exists("fight_ru_ufc.html"):
            print("   –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
            with open("fight_ru_ufc.html", 'r', encoding='utf-8') as f:
                html = f.read()
            
            categories = parser.parse_rankings(html)
            print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ —É—Å–ø–µ—à–µ–Ω")
            print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for i, (name, fighters) in enumerate(list(categories.items())[:3]):
                print(f"   {i+1}. {name}: {len(fighters)} –±–æ–π—Ü–æ–≤")
            
            return True
        else:
            print("   ‚ö†Ô∏è –§–∞–π–ª fight_ru_ufc.html –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run.py –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤: {e}")
        return False

def test_fighter_profiles_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π...")
    
    try:
        from parsers.fighter_profiles import FighterProfilesParser
        
        parser = FighterProfilesParser()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ç–µ—Å—Ç–æ–≤—ã–º URL (–µ—Å–ª–∏ –µ—Å—Ç—å)
        test_url = "https://fight.ru/fighter/example"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL
        
        print("   ‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print("   –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω—É–∂–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ URL –ø—Ä–æ—Ñ–∏–ª–µ–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")
        return False

def test_upcoming_cards_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä –∫–∞—Ä–¥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –∫–∞—Ä–¥–æ–≤...")
    
    try:
        from parsers.upcoming_cards import UpcomingCardsParser
        
        parser = UpcomingCardsParser()
        
        print("   ‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –∫–∞—Ä–¥–æ–≤ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print("   –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ ufc.com")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –∫–∞—Ä–¥–æ–≤: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã UFC Ranker")
    print("=" * 50)
    
    tests = [
        test_database_connection,
        test_rankings_parser,
        test_fighter_profiles_parser,
        test_upcoming_cards_parser
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_new.txt")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: python migrate_to_new_structure.py")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä—ã: python parsers/main.py all")

if __name__ == "__main__":
    main()
