#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ PostgreSQL
"""

import sqlite3
import pandas as pd
from sqlalchemy import create_engine
import os
import sys

def migrate_database():
    """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite –≤ PostgreSQL"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite
    sqlite_path = "ufc_ranker_v2.db"
    if not os.path.exists(sqlite_path):
        print(f"‚ùå –§–∞–π–ª {sqlite_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    sqlite_conn = sqlite3.connect(sqlite_path)
    print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ SQLite: {sqlite_path}")
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
    database_url = os.environ.get("DATABASE_URL", "postgresql://ufcranker:password@localhost/ufc_ranker")
    
    try:
        pg_engine = create_engine(database_url)
        pg_engine.connect()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ PostgreSQL")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
        return False
    
    # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    tables = [
        'weight_classes',
        'fighters', 
        'rankings',
        'events',
        'fights',
        'fight_records',
        'upcoming_fights',
        'fight_stats'
    ]
    
    migrated_count = 0
    
    for table in tables:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –≤ SQLite
            cursor = sqlite_conn.cursor()
            cursor.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table}'")
            if not cursor.fetchone():
                print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ SQLite, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite
            df = pd.read_sql_query(f"SELECT * FROM {table}", sqlite_conn)
            
            if len(df) == 0:
                print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ {table} –ø—É—Å—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ PostgreSQL
            df.to_sql(table, pg_engine, if_exists='replace', index=False)
            print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ {table}: {len(df)} –∑–∞–ø–∏—Å–µ–π")
            migrated_count += 1
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {table}: {e}")
    
    sqlite_conn.close()
    
    print(f"\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: {migrated_count}")
    return True

if __name__ == "__main__":
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    success = migrate_database()
    
    if success:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
