import React from 'react'
import { Link, useLocation } from 'react-router-dom'

interface BreadcrumbItem {
  label: string
  path: string
}

const Breadcrumbs: React.FC = () => {
  const location = useLocation()
  
  const generateBreadcrumbs = (): BreadcrumbItem[] => {
    const pathSegments = location.pathname.split('/').filter(segment => segment !== '')
    const breadcrumbs: BreadcrumbItem[] = [
      { label: 'üè† –ì–ª–∞–≤–Ω–∞—è', path: '/' }
    ]

    let currentPath = ''
    
    pathSegments.forEach((segment, index) => {
      currentPath += `/${segment}`
      
      let label = segment
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–µ–≥–º–µ–Ω—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
      switch (segment) {
        case 'rankings':
          label = 'ü•ä –†–µ–π—Ç–∏–Ω–≥–∏'
          break
        case 'events':
          label = 'üìÖ –°–æ–±—ã—Ç–∏—è'
          break
        case 'fighters':
          label = 'üëä –ë–æ–π—Ü—ã'
          break
        default:
          // –î–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–±–æ–π—Ü—ã, —Å–æ–±—ã—Ç–∏—è, —Ä–µ–π—Ç–∏–Ω–≥–∏)
          if (pathSegments[index - 1] === 'fighters') {
            label = segment.replace(/_/g, ' ')
          } else if (pathSegments[index - 1] === 'events') {
            label = segment.replace(/_/g, ' ')
          } else if (pathSegments[index - 1] === 'rankings') {
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–µ—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Ä—É—Å—Å–∫–∏–µ
            const weightClassMap: { [key: string]: string } = {
              'heavyweight': '–¢—è–∂–µ–ª—ã–π –≤–µ—Å',
              'light_heavyweight': '–ü–æ–ª—É—Ç—è–∂–µ–ª—ã–π –≤–µ—Å',
              'middleweight': '–°—Ä–µ–¥–Ω–∏–π –≤–µ—Å',
              'welterweight': '–ü–æ–ª—É—Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å',
              'lightweight': '–õ–µ–≥–∫–∏–π –≤–µ—Å',
              'featherweight': '–ü–æ–ª—É–ª–µ–≥–∫–∏–π –≤–µ—Å',
              'bantamweight': '–õ–µ–≥—á–∞–π—à–∏–π –≤–µ—Å',
              'flyweight': '–ù–∞–∏–ª–µ–≥—á–∞–π—à–∏–π –≤–µ—Å',
              "women's_bantamweight": '–ñ–µ–Ω—Å–∫–∏–π –ª–µ–≥—á–∞–π—à–∏–π –≤–µ—Å',
              "women's_flyweight": '–ñ–µ–Ω—Å–∫–∏–π –Ω–∞–∏–ª–µ–≥—á–∞–π—à–∏–π –≤–µ—Å',
              "women's_strawweight": '–ñ–µ–Ω—Å–∫–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å'
            }
            label = weightClassMap[segment] || segment.replace(/_/g, ' ')
          }
          break
      }
      
      breadcrumbs.push({ label, path: currentPath })
    })

    return breadcrumbs
  }

  const breadcrumbs = generateBreadcrumbs()

  return (
    <nav className="breadcrumbs mb-6">
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap items-center gap-2 text-sm">
          {breadcrumbs.map((breadcrumb, index) => (
            <React.Fragment key={breadcrumb.path}>
              {index > 0 && <span className="text-gray-400">/</span>}
              {index === breadcrumbs.length - 1 ? (
                <span className="text-yellow-400 font-medium">{breadcrumb.label}</span>
              ) : (
                <Link 
                  to={breadcrumb.path}
                  className="text-gray-300 hover:text-yellow-400 transition-colors"
                >
                  {breadcrumb.label}
                </Link>
              )}
            </React.Fragment>
          ))}
        </div>
      </div>
    </nav>
  )
}

export default Breadcrumbs
