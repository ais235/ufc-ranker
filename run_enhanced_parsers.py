#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤ UFC Ranker
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from parsers.data_source_manager import DataSourceManager
from database.local_config import init_database
from tasks.local_data_tasks import setup_periodic_tasks, local_celery_app, beat_scheduler


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    print("üöÄ UFC Ranker - –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        print("\nüìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        init_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        
        # 2. –ó–∞–ø—É—Å–∫–∞–µ–º worker –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
        print("\nüîÑ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á...")
        local_celery_app.start_worker()
        
        # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
        print("\nüìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á...")
        setup_periodic_tasks()
        beat_scheduler.start()
        
        # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        print("\nüîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
        manager = DataSourceManager()
        
        # 5. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        print("\nüì• –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        results = manager.update_all_data()
        
        # 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        for data_type, data in results.items():
            if isinstance(data, dict) and 'status' in data:
                status_icon = "‚úÖ" if data.get('status') == 'success' else "‚ùå"
                print(f"  {status_icon} {data_type}: {data.get('status', 'unknown')}")
            elif isinstance(data, list):
                print(f"  ‚úÖ {data_type}: {len(data)} –∑–∞–ø–∏—Å–µ–π")
            elif isinstance(data, dict):
                print(f"  ‚úÖ {data_type}: {len(data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        
        # 7. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        print("\nüîç –°—Ç–∞—Ç—É—Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö:")
        sources_status = results.get('sources_status', {})
        for source_name, status in sources_status.items():
            enabled = "‚úÖ" if status.get('enabled') else "‚ùå"
            success_rate = status.get('success_rate', 0)
            print(f"  {enabled} {source_name}: {success_rate:.1%} —É—Å–ø–µ—à–Ω–æ—Å—Ç—å")
        
        # 8. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á:")
        all_tasks = local_celery_app.get_all_tasks()
        if all_tasks:
            for task_id, task_info in all_tasks.items():
                status_icon = "‚úÖ" if task_info['status'] == 'SUCCESS' else "‚ùå" if task_info['status'] == 'FAILURE' else "üîÑ"
                print(f"  {status_icon} {task_info.get('id', 'unknown')}: {task_info['status']}")
        else:
            print("  ‚ÑπÔ∏è –ù–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á")
        
        print("\nüéâ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!")
        print("\nüí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  - –ü–∞—Ä—Å–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
        print("  - –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("  - –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # 9. –ñ–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            input("\n‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤: {e}")
        return 1
    
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        beat_scheduler.stop()
        local_celery_app.stop_worker()
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    return 0


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
